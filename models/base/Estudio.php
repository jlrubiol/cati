<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use dosamigos\translateable\TranslateableBehavior;

/**
 * This is the base-model class for table "estudio".
 *
 * @property integer $id
 * @property string $codigo_mec
 * @property string $rama_id
 * @property integer $tipoEstudio_id
 * @property string $nombre_coordinador
 * @property string $email_coordinador
 * @property integer $activo
 * @property integer $anyo_academico
 * @property integer $id_nk
 * @property string $fecha_implantacion
 * @property string $fecha_acreditacion
 * @property integer $anyos_evaluacion
 *
 * @property \app\models\Rama $rama
 * @property \app\models\TipoEstudio $tipoEstudio
 * @property \app\models\EstudioHistorico[] $estudioHistoricos
 * @property \app\models\InformePublicado[] $informePublicados
 * @property \app\models\InformeRespuesta[] $informeRespuestas
 * @property \app\models\Linea[] $lineas
 * @property \app\models\Plan[] $plans
 * @property \app\models\PlanPublicado[] $planPublicados
 * @property \app\models\PlanRespuesta[] $planRespuestas
 * @property string $aliasModel
 */
abstract class Estudio extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'estudio';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'translatable' => [
                'class' => TranslateableBehavior::className(),
                // in case you renamed your relation, you can setup its name
                // 'relation' => 'translations',
                'translationAttributes' => [
                    'nombre',
                    'anyo_academico',
                    'estudio_id_nk'
                ],
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['tipoEstudio_id', 'activo', 'anyo_academico', 'id_nk', 'anyos_evaluacion'], 'integer'],
            [['fecha_implantacion', 'fecha_acreditacion'], 'safe'],
            [['codigo_mec'], 'string', 'max' => 11],
            [['rama_id'], 'string', 'max' => 1],
            [['nombre_coordinador'], 'string', 'max' => 127],
            [['email_coordinador'], 'string', 'max' => 254],
            [['rama_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Rama::className(), 'targetAttribute' => ['rama_id' => 'id']],
            [['tipoEstudio_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\TipoEstudio::className(), 'targetAttribute' => ['tipoEstudio_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'codigo_mec' => Yii::t('models', 'Codigo Mec'),
            'rama_id' => Yii::t('models', 'Rama ID'),
            'tipoEstudio_id' => Yii::t('models', 'Tipo Estudio ID'),
            'nombre_coordinador' => Yii::t('models', 'Nombre Coordinador'),
            'email_coordinador' => Yii::t('models', 'Email Coordinador'),
            'activo' => Yii::t('models', 'Activo'),
            'anyo_academico' => Yii::t('models', 'Anyo Academico'),
            'id_nk' => Yii::t('models', 'Id Nk'),
            'fecha_implantacion' => Yii::t('models', 'Fecha Implantacion'),
            'fecha_acreditacion' => Yii::t('models', 'Fecha Acreditacion'),
            'anyos_evaluacion' => Yii::t('models', 'Anyos Evaluacion'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'fecha_implantacion' => Yii::t('models', 'Fecha de implantaciÃ³n'),
            'fecha_acreditacion' => Yii::t('models', 'Fecha de Ãºltima renovaciÃ³n'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRama()
    {
        return $this->hasOne(\app\models\Rama::className(), ['id' => 'rama_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTipoEstudio()
    {
        return $this->hasOne(\app\models\TipoEstudio::className(), ['id' => 'tipoEstudio_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEstudioHistoricos()
    {
        return $this->hasMany(\app\models\EstudioHistorico::className(), ['estudio_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getInformePublicados()
    {
        return $this->hasMany(\app\models\InformePublicado::className(), ['estudio_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getInformeRespuestas()
    {
        return $this->hasMany(\app\models\InformeRespuesta::className(), ['estudio_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getLineas()
    {
        return $this->hasMany(\app\models\Linea::className(), ['estudio_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPlans()
    {
        return $this->hasMany(\app\models\Plan::className(), ['estudio_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPlanPublicados()
    {
        return $this->hasMany(\app\models\PlanPublicado::className(), ['estudio_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPlanRespuestas()
    {
        return $this->hasMany(\app\models\PlanRespuesta::className(), ['estudio_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTranslations()
    {
        return $this->hasMany(\app\models\EstudioLang::className(), ['estudio_id' => 'id']);
    }



}
