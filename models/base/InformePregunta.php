<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use dosamigos\translateable\TranslateableBehavior;

/**
 * This is the base-model class for table "informe_pregunta".
 *
 * @property integer $id
 * @property integer $anyo
 * @property string $apartado
 * @property integer $editable
 * @property integer $editable_1
 * @property integer $invisible_1
 * @property integer $invisible_3
 * @property string $tabla
 * @property string $tipo
 * @property integer $oblig_def
 *
 * @property \app\models\InformeRespuesta[] $informeRespuestas
 * @property string $aliasModel
 */
abstract class InformePregunta extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'informe_pregunta';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'translatable' => [
                'class' => TranslateableBehavior::className(),
                // in case you renamed your relation, you can setup its name
                // 'relation' => 'translations',
                'translationAttributes' => [
                    'titulo',
                    'info',
                    'explicacion',
                    'texto_comun'
                ],
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['anyo', 'editable', 'editable_1', 'invisible_1', 'invisible_3', 'oblig_def'], 'integer'],
            [['apartado', 'tipo'], 'string', 'max' => 15],
            [['tabla'], 'string', 'max' => 127]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'anyo' => Yii::t('models', 'Anyo'),
            'apartado' => Yii::t('models', 'Apartado'),
            'editable' => Yii::t('models', 'Editable'),
            'editable_1' => Yii::t('models', 'Editable en IEC 1'),
            'invisible_1' => Yii::t('models', 'Invisible en IEC 1'),
            'invisible_3' => Yii::t('models', 'Invisible en IEC 3'),
            'tabla' => Yii::t('models', 'Tabla'),
            'tipo' => Yii::t('models', 'Tipo'),
            'oblig_def' => Yii::t('models', 'Obligatorio en versiÃ³n definitiva'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'editable_1' => Yii::t('models', 'Editable en IEC 1'),
            'invisible_1' => Yii::t('models', 'Invisible en IEC 1'),
            'invisible_3' => Yii::t('models', 'Invisible en IEC 3'),
            'oblig_def' => Yii::t('models', 'Obligatorio en versiÃ³n definitiva'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getInformeRespuestas()
    {
        return $this->hasMany(\app\models\InformeRespuesta::className(), ['informe_pregunta_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTranslations()
    {
        return $this->hasMany(\app\models\InformePreguntaLang::className(), ['informe_pregunta_id' => 'id']);
    }



}
