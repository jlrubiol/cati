<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use dosamigos\translateable\TranslateableBehavior;

/**
 * This is the base-model class for table "plan_respuesta".
 *
 * @property integer $id
 * @property integer $estudio_id
 * @property integer $anyo
 * @property integer $plan_pregunta_id
 * @property string $apartado
 * @property integer $estudio_id_nk
 * @property integer $cumplimiento
 * @property string $ambito_id
 * @property string $responsable_aprobacion_id
 * @property string $plazo_id
 * @property string $apartado_memoria_id
 * @property string $tipo_modificacion_id
 * @property string $seguimiento_id
 * @property string $estado_id
 *
 * @property \app\models\Estudio $estudio
 * @property \app\models\PlanPregunta $planPregunta
 * @property \app\models\PaimOpcion $ambito
 * @property \app\models\PaimOpcion $responsableAprobacion
 * @property \app\models\PaimOpcion $plazo
 * @property \app\models\PaimOpcion $apartadoMemoria
 * @property \app\models\PaimOpcion $tipoModificacion
 * @property \app\models\PaimOpcion $seguimiento
 * @property \app\models\PaimOpcion $estado
 * @property string $aliasModel
 */
abstract class PlanRespuesta extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'plan_respuesta';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'translatable' => [
                'class' => TranslateableBehavior::className(),
                // in case you renamed your relation, you can setup its name
                // 'relation' => 'translations',
                'translationAttributes' => [
                    'apartado_memoria',
                    'titulo',
                    'descripcion_breve',
                    'descripcion_amplia',
                    'responsable_accion',
                    'inicio',
                    'final',
                    'responsable_competente',
                    'justificacion',
                    'nivel',
                    'fecha',
                    'problema',
                    'objetivo',
                    'acciones',
                    'plazo_implantacion',
                    'indicador',
                    'valores_a_alcanzar',
                    'valores_alcanzados',
                    'necesidad_detectada',
                    'observaciones',
                    'justificacion_breve'
                ],
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['estudio_id', 'plan_pregunta_id'], 'required'],
            [['estudio_id', 'anyo', 'plan_pregunta_id', 'estudio_id_nk', 'cumplimiento', 'ambito_id', 'responsable_aprobacion_id', 'plazo_id', 'apartado_memoria_id', 'tipo_modificacion_id', 'seguimiento_id', 'estado_id'], 'integer'],
            [['apartado'], 'string', 'max' => 15],
            [['estudio_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\Estudio::className(), 'targetAttribute' => ['estudio_id' => 'id']],
            [['plan_pregunta_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\PlanPregunta::className(), 'targetAttribute' => ['plan_pregunta_id' => 'id']],
            [['ambito_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\PaimOpcion::className(), 'targetAttribute' => ['ambito_id' => 'id']],
            [['responsable_aprobacion_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\PaimOpcion::className(), 'targetAttribute' => ['responsable_aprobacion_id' => 'id']],
            [['plazo_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\PaimOpcion::className(), 'targetAttribute' => ['plazo_id' => 'id']],
            [['apartado_memoria_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\PaimOpcion::className(), 'targetAttribute' => ['apartado_memoria_id' => 'id']],
            [['tipo_modificacion_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\PaimOpcion::className(), 'targetAttribute' => ['tipo_modificacion_id' => 'id']],
            [['seguimiento_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\PaimOpcion::className(), 'targetAttribute' => ['seguimiento_id' => 'id']],
            [['estado_id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\models\PaimOpcion::className(), 'targetAttribute' => ['estado_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'estudio_id' => Yii::t('models', 'Estudio ID'),
            'anyo' => Yii::t('models', 'Anyo'),
            'plan_pregunta_id' => Yii::t('models', 'Plan Pregunta ID'),
            'apartado' => Yii::t('models', 'Apartado'),
            'estudio_id_nk' => Yii::t('models', 'Estudio Id Nk'),
            'cumplimiento' => Yii::t('models', 'Cumplimiento'),
            'ambito_id' => Yii::t('models', 'Ambito ID'),
            'responsable_aprobacion_id' => Yii::t('models', 'Responsable Aprobacion ID'),
            'plazo_id' => Yii::t('models', 'Plazo ID'),
            'apartado_memoria_id' => Yii::t('models', 'Apartado Memoria ID'),
            'tipo_modificacion_id' => Yii::t('models', 'Tipo Modificacion ID'),
            'seguimiento_id' => Yii::t('models', 'Seguimiento ID'),
            'estado_id' => Yii::t('models', 'Estado ID'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEstudio()
    {
        return $this->hasOne(\app\models\Estudio::className(), ['id' => 'estudio_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPlanPregunta()
    {
        return $this->hasOne(\app\models\PlanPregunta::className(), ['id' => 'plan_pregunta_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAmbito()
    {
        return $this->hasOne(\app\models\PaimOpcion::className(), ['id' => 'ambito_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getResponsableAprobacion()
    {
        return $this->hasOne(\app\models\PaimOpcion::className(), ['id' => 'responsable_aprobacion_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPlazo()
    {
        return $this->hasOne(\app\models\PaimOpcion::className(), ['id' => 'plazo_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getApartadoMemoria()
    {
        return $this->hasOne(\app\models\PaimOpcion::className(), ['id' => 'apartado_memoria_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTipoModificacion()
    {
        return $this->hasOne(\app\models\PaimOpcion::className(), ['id' => 'tipo_modificacion_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSeguimiento()
    {
        return $this->hasOne(\app\models\PaimOpcion::className(), ['id' => 'seguimiento_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEstado()
    {
        return $this->hasOne(\app\models\PaimOpcion::className(), ['id' => 'estado_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTranslations()
    {
        return $this->hasMany(\app\models\PlanRespuestaLang::className(), ['plan_respuesta_id' => 'id']);
    }



}
